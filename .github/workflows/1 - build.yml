name: GraalVM Community Edition build
#on: [push, pull_request]
on:
  pull_request:
    branches:
      - master
    types: [closed]
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: graalvm/setup-graalvm@v1
        with:
          java-version: '21'
          github-token: ${{ secrets.GITHUB_TOKEN }}
          native-image-job-reports: 'true'

      - name: Cache the Maven packages to speed up build
        uses: actions/cache@v1
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Build
        run: |
          mkdir -p /home/certs/letsencrypt/certificates
          wget -P /home/certs/letsencrypt/certificates https://calando-detention.000webhostapp.com/kamehouse.com.br.crt
          wget -P /home/certs/letsencrypt/certificates https://calando-detention.000webhostapp.com/kamehouse.com.br.key
          echo "GRAALVM_HOME: $GRAALVM_HOME"
          echo "JAVA_HOME: $JAVA_HOME"
          java --version
          native-image --version
          mvn package -Dnative

      - name: Gerando pacote
        uses: actions/upload-artifact@v2
        with:
          name: personalprofile
          path: ${{ github.workspace }}/target/*

  publish-package:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Download do artifact
        uses: actions/download-artifact@master
        with:
          name: personalprofile
          path:  ${{ github.workspace }}/target/*
          retention-days: 1

      - name: Zip
        run: |
          sudo apt install zip unzip
          zip -r personalprofile.zip ${{ github.workspace }}
          mkdir -p pacote
          mv personalprofile.zip pacote/personalprofile.zip 

      - name: Envio para o servidor
        uses: SamKirkland/FTP-Deploy-Action@v4.3.4
        with:
          server: ${{secrets.FTPSERVER}}
          username: ${{secrets.FTPUSERNAME}}
          password: ${{secrets.FTPPASSWORD}}
          local-dir: ${{ github.workspace }}/pacote/
          server-dir: /home/github/personalprofile/


  deployment:
    name: Deployment
    runs-on: ubuntu-latest
    needs: publish-package
    steps:
      - name: Executando deployment
        uses: appleboy/ssh-action@v1.0.0
        env:
          POSTGRES_USERNAME: ${{ secrets.POSTGRES_USERNAME }}
          POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
        with:
          host: ${{ secrets.FTPSERVER }}
          username: ${{ secrets.FTPUSERNAME }}
          password: ${{ secrets.FTPPASSWORD }}
          port: 22
          envs: POSTGRES_USERNAME,POSTGRES_PASSWORD
          script: |
            /bin/bash
            cd /home/github/personalprofile/
            export POSTGRES_USERNAME="$POSTGRES_USERNAME"
            export POSTGRES_PASSWORD="$POSTGRES_PASSWORD"
            sh script.sh